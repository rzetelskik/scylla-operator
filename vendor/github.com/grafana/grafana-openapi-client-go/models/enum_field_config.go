// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// EnumFieldConfig Enum field config
// Vector values are used as lookup keys into the enum fields
//
// swagger:model EnumFieldConfig
type EnumFieldConfig struct {

	// Color is the color value for a given index (empty is undefined)
	Color []string `json:"color"`

	// Description of the enum state
	Description []string `json:"description"`

	// Icon supports setting an icon for a given index value
	Icon []string `json:"icon"`

	// Value is the string display value for a given index
	Text []string `json:"text"`
}

// Validate validates this enum field config
func (m *EnumFieldConfig) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this enum field config based on context it is used
func (m *EnumFieldConfig) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *EnumFieldConfig) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *EnumFieldConfig) UnmarshalBinary(b []byte) error {
	var res EnumFieldConfig
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
