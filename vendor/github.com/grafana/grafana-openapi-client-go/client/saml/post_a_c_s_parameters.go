// Code generated by go-swagger; DO NOT EDIT.

package saml

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewPostACSParams creates a new PostACSParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewPostACSParams() *PostACSParams {
	return &PostACSParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewPostACSParamsWithTimeout creates a new PostACSParams object
// with the ability to set a timeout on a request.
func NewPostACSParamsWithTimeout(timeout time.Duration) *PostACSParams {
	return &PostACSParams{
		timeout: timeout,
	}
}

// NewPostACSParamsWithContext creates a new PostACSParams object
// with the ability to set a context for a request.
func NewPostACSParamsWithContext(ctx context.Context) *PostACSParams {
	return &PostACSParams{
		Context: ctx,
	}
}

// NewPostACSParamsWithHTTPClient creates a new PostACSParams object
// with the ability to set a custom HTTPClient for a request.
func NewPostACSParamsWithHTTPClient(client *http.Client) *PostACSParams {
	return &PostACSParams{
		HTTPClient: client,
	}
}

/*
PostACSParams contains all the parameters to send to the API endpoint

	for the post a c s operation.

	Typically these are written to a http.Request.
*/
type PostACSParams struct {

	// RelayState.
	RelayState *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the post a c s params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PostACSParams) WithDefaults() *PostACSParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the post a c s params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PostACSParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the post a c s params
func (o *PostACSParams) WithTimeout(timeout time.Duration) *PostACSParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the post a c s params
func (o *PostACSParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the post a c s params
func (o *PostACSParams) WithContext(ctx context.Context) *PostACSParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the post a c s params
func (o *PostACSParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the post a c s params
func (o *PostACSParams) WithHTTPClient(client *http.Client) *PostACSParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the post a c s params
func (o *PostACSParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithRelayState adds the relayState to the post a c s params
func (o *PostACSParams) WithRelayState(relayState *string) *PostACSParams {
	o.SetRelayState(relayState)
	return o
}

// SetRelayState adds the relayState to the post a c s params
func (o *PostACSParams) SetRelayState(relayState *string) {
	o.RelayState = relayState
}

// WriteToRequest writes these params to a swagger request
func (o *PostACSParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.RelayState != nil {

		// query param RelayState
		var qrRelayState string

		if o.RelayState != nil {
			qrRelayState = *o.RelayState
		}
		qRelayState := qrRelayState
		if qRelayState != "" {

			if err := r.SetQueryParam("RelayState", qRelayState); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
