// Code generated by go-swagger; DO NOT EDIT.

package users

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewGetUserByLoginOrEmailParams creates a new GetUserByLoginOrEmailParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetUserByLoginOrEmailParams() *GetUserByLoginOrEmailParams {
	return &GetUserByLoginOrEmailParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetUserByLoginOrEmailParamsWithTimeout creates a new GetUserByLoginOrEmailParams object
// with the ability to set a timeout on a request.
func NewGetUserByLoginOrEmailParamsWithTimeout(timeout time.Duration) *GetUserByLoginOrEmailParams {
	return &GetUserByLoginOrEmailParams{
		timeout: timeout,
	}
}

// NewGetUserByLoginOrEmailParamsWithContext creates a new GetUserByLoginOrEmailParams object
// with the ability to set a context for a request.
func NewGetUserByLoginOrEmailParamsWithContext(ctx context.Context) *GetUserByLoginOrEmailParams {
	return &GetUserByLoginOrEmailParams{
		Context: ctx,
	}
}

// NewGetUserByLoginOrEmailParamsWithHTTPClient creates a new GetUserByLoginOrEmailParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetUserByLoginOrEmailParamsWithHTTPClient(client *http.Client) *GetUserByLoginOrEmailParams {
	return &GetUserByLoginOrEmailParams{
		HTTPClient: client,
	}
}

/*
GetUserByLoginOrEmailParams contains all the parameters to send to the API endpoint

	for the get user by login or email operation.

	Typically these are written to a http.Request.
*/
type GetUserByLoginOrEmailParams struct {

	/* LoginOrEmail.

	   loginOrEmail of the user
	*/
	LoginOrEmail string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get user by login or email params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetUserByLoginOrEmailParams) WithDefaults() *GetUserByLoginOrEmailParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get user by login or email params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetUserByLoginOrEmailParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get user by login or email params
func (o *GetUserByLoginOrEmailParams) WithTimeout(timeout time.Duration) *GetUserByLoginOrEmailParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get user by login or email params
func (o *GetUserByLoginOrEmailParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get user by login or email params
func (o *GetUserByLoginOrEmailParams) WithContext(ctx context.Context) *GetUserByLoginOrEmailParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get user by login or email params
func (o *GetUserByLoginOrEmailParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get user by login or email params
func (o *GetUserByLoginOrEmailParams) WithHTTPClient(client *http.Client) *GetUserByLoginOrEmailParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get user by login or email params
func (o *GetUserByLoginOrEmailParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithLoginOrEmail adds the loginOrEmail to the get user by login or email params
func (o *GetUserByLoginOrEmailParams) WithLoginOrEmail(loginOrEmail string) *GetUserByLoginOrEmailParams {
	o.SetLoginOrEmail(loginOrEmail)
	return o
}

// SetLoginOrEmail adds the loginOrEmail to the get user by login or email params
func (o *GetUserByLoginOrEmailParams) SetLoginOrEmail(loginOrEmail string) {
	o.LoginOrEmail = loginOrEmail
}

// WriteToRequest writes these params to a swagger request
func (o *GetUserByLoginOrEmailParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// query param loginOrEmail
	qrLoginOrEmail := o.LoginOrEmail
	qLoginOrEmail := qrLoginOrEmail
	if qLoginOrEmail != "" {

		if err := r.SetQueryParam("loginOrEmail", qLoginOrEmail); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
